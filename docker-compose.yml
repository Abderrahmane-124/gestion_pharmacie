version: '3.8'

services:
  backend:
    image: ${DOCKER_USERNAME:-abderrahmane124}/pharmacy-backend:${GITHUB_SHA:-latest}
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/pharmacy
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-pharmacy_user}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-pharmacy_password}
    depends_on:
      - db
    networks:
      - pharmacy-network

  frontend:
    image: ${DOCKER_USERNAME:-abderrahmane124}/pharmacy-frontend:${GITHUB_SHA:-latest}
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - pharmacy-network

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=pharmacy
      - POSTGRES_USER=${DB_USERNAME:-pharmacy_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-pharmacy_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pharmacy-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    ports:
      - "5000:5000"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

networks:
  pharmacy-network:
    driver: bridge

volumes:
  postgres_data: 
